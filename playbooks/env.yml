---
- name: cloud base setup
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
  - name: upload ssh key to cloudstack
    cs_sshkeypair:
      name: defaultkey
      public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

  - name: ensure affinity group exist
    cs_affinitygroup:
      name: search

  - name: ensure security groups exist
    cs_securitygroup:
      name: "{{ item }}"
    with_items:
      - default
      - search

  - name: add inbound SSH to security group default
    cs_securitygroup_rule:
      security_group: default
      start_port: 22
      end_port: 22

  - name: add inbound tcp rules to security group search
    cs_securitygroup_rule:
      security_group: search
      start_port: "{{ item }}"
      end_port: "{{ item }}"
    with_items:
      - 80
      - 443

- name: install VMs in the cloud
  hosts: search
  connection: local
  gather_facts: no
  tasks:
  - name: create VMs on cloudstack
    local_action:
      module: cs_instance
      display_name: "{{ inventory_hostname }}"
      group: search
      template: "Linux Debian 8 64-bit 10G Disk (2017-07-03-54f631)"
      service_offering: Small
      security_groups:
        - default
        - search
      ssh_key: defaultkey
      state: started
      # restarts VM if changes need to be applied
      force: true
      user_data: |
        #cloud-config
        manage_etc_hosts: true
        fqdn: "{{ inventory_hostname }}"
    register: vm

  - name: print VM infos
    debug:
      msg: "VM {{ vm.display_name }} {{ vm.default_ip }}"

  - name: assing IP to the inventory
    set_fact:
      ansible_ssh_host: "{{ vm.default_ip }}"

  - name: waiting for SSH to come up
    wait_for:
      port: 22
      host: "{{ vm.default_ip }}"
